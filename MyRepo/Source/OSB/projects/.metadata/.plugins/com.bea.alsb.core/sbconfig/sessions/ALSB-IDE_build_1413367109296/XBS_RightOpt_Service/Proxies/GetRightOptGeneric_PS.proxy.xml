<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/config" xmlns:con2="http://www.bea.com/wli/sb/stages/transform/config" xmlns:con3="http://www.bea.com/wli/sb/stages/routing/config">
  <ser:coreEntry isProxy="true" isEnabled="true" isAutoPublish="false" isTracingEnabled="false">
    <ser:binding type="SOAP" isSoap12="false" xsi:type="con4:SoapBindingType" xmlns:con4="http://www.bea.com/wli/sb/services/bindings/config">
      <con4:wsdl ref="XBS_RightOpt_Service/Resources/WSDLs/DataAccessWebService"/>
      <con4:binding>
        <con4:name>DataAccessWebServiceSEIBinding</con4:name>
        <con4:namespace>urn:DataAccessWebService/wsdl</con4:namespace>
      </con4:binding>
      <con4:selector type="SOAP body"/>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
    <ser:ws-policy>
      <ser:binding-mode>wsdl-policy-attachments</ser:binding-mode>
    </ser:ws-policy>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>http</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>/XBS_RightOpt_Service/Proxies/GetRightOptGeneric_PS</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>false</tran:all-headers>
    <tran:provider-specific>
      <http:inbound-properties/>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router>
    <con:pipeline type="request" name="PipelinePairNode1_request">
      <con:stage name="stage1">
        <con:context>
          <con1:userNsDecl namespace="http://ivr.acshrsolutions.com/DAWS" prefix="daws"/>
          <con1:varNsDecl namespace="urn:DataAccessWebService/types" prefix="typ"/>
        </con:context>
        <con:actions>
          <con2:assign varName="Services">
            <con1:id>_ActionId-9161181953119112455--3fabd6f.148824e0bc2.-7450</con1:id>
            <con2:expr>
              <con1:xqueryTransform>
                <con1:resource ref="XBS_RightOpt_Service/Resources/Properties/ServiceEndPointProperties"/>
              </con1:xqueryTransform>
            </con2:expr>
          </con2:assign>
          <con2:assign varName="ReqXml">
            <con1:id>_ActionId-9161181953119112455--3fabd6f.148824e0bc2.-75a8</con1:id>
            <con2:expr>
              <con1:xqueryText>fn-bea:inlinedXML($body/typ:getResults/String_1)</con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:assign varName="SP_Name">
            <con1:id>_ActionId-9161181953119112455--3fabd6f.148824e0bc2.-7413</con1:id>
            <con2:expr>
              <con1:xqueryText>$ReqXml/daws:SP/text()</con1:xqueryText>
            </con2:expr>
          </con2:assign>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode1_response"/>
    <con:flow>
      <con:pipeline-node name="PipelinePairNode1">
        <con:request>PipelinePairNode1_request</con:request>
        <con:response>PipelinePairNode1_response</con:response>
      </con:pipeline-node>
      <con:route-node name="RouteNode1">
        <con:context/>
        <con:actions>
          <con3:dynamic-route>
            <con1:id>_ActionId-9161181953119112455--3fabd6f.148824e0bc2.-72c2</con1:id>
            <con3:service>
              <con1:xqueryText>&lt;ctx:route>
&lt;ctx:service isProxy='true'>{$Services/Services/Service[logicalName/text()=$SP_Name]/physicalName/text()}&lt;/ctx:service>
&lt;/ctx:route></con1:xqueryText>
            </con3:service>
            <con3:outboundTransform/>
            <con3:responseTransform/>
          </con3:dynamic-route>
        </con:actions>
      </con:route-node>
    </con:flow>
  </ser:router>
</xml-fragment>